"""
LexAprendiz - Especialista em Legisla√ß√£o da Aprendizagem
Vers√£o minimalista e est√°vel para Streamlit Cloud
"""

import streamlit as st
import json
import hashlib
from pathlib import Path
from conap_database import consultar_conap

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="LexAprendiz",
    page_icon="‚öñÔ∏è",
    layout="wide"
)

# CSS para estabilidade
st.markdown("""
<style>
    .stApp { transition: none !important; }
    .main-header { text-align: center; margin-bottom: 2rem; }
    .chat-container { max-width: 800px; margin: 0 auto; }
</style>
""", unsafe_allow_html=True)

# Banco de conhecimento simplificado
CONHECIMENTO_BASE = {
    "direitos_gestante": """
    **Direitos da Aprendiz Gestante:**
    
    1. **Estabilidade no Emprego:** A aprendiz gestante tem direito √† estabilidade desde a confirma√ß√£o da gravidez at√© 5 meses ap√≥s o parto.
    
    2. **Licen√ßa-Maternidade:** 120 dias de licen√ßa-maternidade remunerada.
    
    3. **Consultas M√©dicas:** Dispensa para consultas pr√©-natais sem desconto no sal√°rio.
    
    4. **Mudan√ßa de Fun√ß√£o:** Se necess√°rio, pode ser transferida para fun√ß√£o compat√≠vel com seu estado.
    
    5. **Rescis√£o:** N√£o pode ser demitida sem justa causa durante a gravidez e estabilidade.
    
    **Base Legal:** CLT Art. 391-A, Lei 11.788/2008, Constitui√ß√£o Federal Art. 7¬∫, XVIII.
    """,
    
    "cota_aprendizes": """
    **C√°lculo de Cota de Aprendizes:**
    
    - **5% a 15%** do total de funcion√°rios em cada estabelecimento
    - **Base de c√°lculo:** Fun√ß√µes que demandem forma√ß√£o profissional
    - **Idade:** 14 a 24 anos (sem limite para pessoas com defici√™ncia)
    - **Dura√ß√£o:** 6 meses a 2 anos
    
    **Exemplos:**
    - Empresa com 100 funcion√°rios: m√≠nimo 5, m√°ximo 15 aprendizes
    - Empresa com 50 funcion√°rios: m√≠nimo 3, m√°ximo 8 aprendizes
    
    **Base Legal:** Lei 10.097/2000, Decreto 5.598/2005.
    """,
    
    "penalidades": """
    **Penalidades por Descumprimento:**
    
    1. **Multa Administrativa:** R$ 402,53 a R$ 4.025,33 por aprendiz n√£o contratado
    2. **Auto de Infra√ß√£o:** Emitido pela fiscaliza√ß√£o do trabalho  
    3. **TAC:** Termo de Ajustamento de Conduta com o MPT
    4. **A√ß√£o Civil P√∫blica:** Indeniza√ß√£o por danos morais coletivos
    
    **Agravantes:**
    - Reincid√™ncia
    - M√°-f√©
    - Resist√™ncia √† fiscaliza√ß√£o
    
    **Base Legal:** CLT Art. 434, Portaria 723/2012.
    """
}

def buscar_resposta(pergunta):
    """Busca resposta na base de conhecimento integrada com CONAP"""
    pergunta_lower = pergunta.lower()
    
    # Primeiro verifica se √© consulta do CONAP (programas, CBO, Sistema S, etc.)
    if any(word in pergunta_lower for word in ['programa', 'conap', 'cbo', 'senai', 'senac', 'senat', 'senar', 'sescoop', 'curso', 'aprendizagem profissional', 'ocupa√ß√£o']):
        resposta_conap = consultar_conap(pergunta)
        if resposta_conap:
            return resposta_conap
    
    # Mant√©m as consultas tradicionais de legisla√ß√£o
    if any(word in pergunta_lower for word in ['gestante', 'gr√°vida', 'gravidez', 'maternidade']):
        return CONHECIMENTO_BASE['direitos_gestante']
    elif any(word in pergunta_lower for word in ['cota', 'quantos', 'c√°lculo', 'percentual']):
        return CONHECIMENTO_BASE['cota_aprendizes']
    elif any(word in pergunta_lower for word in ['multa', 'penalidade', 'fiscaliza√ß√£o', 'puni√ß√£o']):
        return CONHECIMENTO_BASE['penalidades']
    else:
        return """
        **üìö LexAprendiz - √Åreas de Consulta:**
        
        **üèõÔ∏è LEGISLA√á√ÉO:**
        1. **Direitos da Gestante:** Pergunte sobre direitos da aprendiz gestante
        2. **Cota de Aprendizes:** Pergunte sobre c√°lculo de cotas
        3. **Penalidades:** Pergunte sobre multas e fiscaliza√ß√£o
        
        **üìã CONAP - PROGRAMAS DE APRENDIZAGEM:**
        4. **Programas por √Årea:** Administra√ß√£o, Ind√∫stria, TI, Constru√ß√£o, Sa√∫de, etc.
        5. **Sistema S:** Cursos SENAI, SENAC, SENAT, SENAR, SESCOOP
        6. **CBOs e Ocupa√ß√µes:** Consulte por c√≥digo CBO ou nome da ocupa√ß√£o
        7. **Arcos Ocupacionais:** Gest√£o, Ind√∫stria, Informa√ß√£o, Infraestrutura, etc.
        
        **üí° Exemplos de perguntas:**
        - "Quais os direitos da aprendiz gestante?"
        - "Como calcular a cota de aprendizes?"
        - "Programas de administra√ß√£o"
        - "Cursos do SENAI"
        - "CBO 4110-10"
        - "Programas para 16 anos"
        """

def main():
    """Interface principal"""
    
    # Cabe√ßalho
    st.markdown('<div class="main-header">', unsafe_allow_html=True)
    st.markdown("# ‚öñÔ∏è LexAprendiz")
    st.markdown("### Especialista em Legisla√ß√£o da Aprendizagem")
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Informa√ß√µes
    st.info("üéØ **Especialista em Legisla√ß√£o Brasileira da Aprendizagem + CONAP**\n\nConsulte sobre direitos, deveres, cotas, penalidades e **programas de aprendizagem profissional** do Cat√°logo Nacional (CONAP).")
    
    # Destaque CONAP
    st.success("üìã **NOVO!** Integra√ß√£o com CONAP - Consulte programas, CBOs, Sistema S (SENAI, SENAC, SENAT, SENAR) e arcos ocupacionais!")
    
    # Container do chat
    st.markdown('<div class="chat-container">', unsafe_allow_html=True)
    
    # Inicializar hist√≥rico
    if "messages" not in st.session_state:
        st.session_state.messages = []
    
    # Exibir mensagens
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])
    
    # Input do usu√°rio
    if prompt := st.chat_input("Digite sua pergunta sobre legisla√ß√£o da aprendizagem..."):
        # Adicionar pergunta
        st.session_state.messages.append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)
        
        # Gerar resposta
        with st.chat_message("assistant"):
            with st.spinner("Consultando legisla√ß√£o..."):
                resposta = buscar_resposta(prompt)
                st.markdown(resposta)
                st.session_state.messages.append({"role": "assistant", "content": resposta})
    
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Rodap√©
    st.markdown("---")
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("üóëÔ∏è Limpar Chat", use_container_width=True):
            st.session_state.messages = []
            st.success("Chat limpo!")
    
    with col2:
        st.markdown("**üìö Base Legal**")
        st.caption("Lei 10.097/2000, CLT, CF/88")
    
    with col3:
        st.markdown("**üìû Suporte**")
        st.caption("Sistema LexAprendiz v2.0")

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        st.error("‚ö†Ô∏è Erro tempor√°rio no sistema")
        st.info("üîÑ Recarregue a p√°gina")
        
        # Fallback b√°sico
        st.markdown("# ‚öñÔ∏è LexAprendiz")
        st.markdown("### Sistema em Manuten√ß√£o")
        st.info("Por favor, tente novamente em alguns instantes.")